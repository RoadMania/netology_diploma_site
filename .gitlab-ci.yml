# This pipeline will automatically build docker image and deploy it in case of any changes.

stages:
  - build
  - deploy

variables:
  IMAGE_TAG_LATEST: latest
  DOCKER_TLS_CERTDIR: ""
  IMAGE_TAG_COMMIT: ${CI_COMMIT_SHORT_SHA}
  NAMESPACE: "diploma-site"
  DEPLOYMENT_NAME: "diplom-app"
  KUBE_CONTEXT: microk8s

before_script:
  - echo "Logging into Docker Hub..."
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
  - echo "$KUBE_CONFIG" > kubeconfig.yaml
  - export KUBECONFIG=$(pwd)/kubeconfig.yaml

build_image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - if [ -n "$CI_COMMIT_TAG" ]; then export TAG=$CI_COMMIT_TAG; else export TAG=$IMAGE_TAG_LATEST; fi
    - echo "Cloning repository..."
    - git clone https://gitlab.com/RoadMania/netology_diploma_site.git 
    - cd netology_diploma_site
    - echo "Building Docker image..."
    - docker build -t "$DOCKER_USER"/"$IMAGE_NAME":"$TAG" . 
    - echo "Pushing Docker image to Docker Hub..."
    - docker images
    - docker push "$DOCKER_USER"/"$IMAGE_NAME":"$TAG"

deploy_to_kubernetes:
  stage: deploy
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  tags:
    - diploma
  only:
    - main
    - tags
  script:
    - microk8s kubectl config get-contexts
    - echo "Deploying to Kubernetes..."
    - microk8s kubectl config use-context $KUBE_CONTEXT
    - microk8s kubectl set image deployment/${DEPLOYMENT_NAME} ${IMAGE_NAME}=${DOCKER_USER}/${IMAGE_NAME}:"$TAG" --namespace=${NAMESPACE}
    - microk8s kubectl rollout restart deployment/${DEPLOYMENT_NAME} --namespace=${NAMESPACE}
